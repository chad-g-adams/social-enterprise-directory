swagger: "2.0"
info:
  version: "0.0.1"
  title: Social Enterprise Directory
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

securityDefinitions:
  # handler for directory admins
  oauth-directory-admin:
    description: Ensures the logged in user is a directory administrator
    type: oauth2
    flow: accessCode
    authorizationUrl: ''
    tokenUrl: ''

  # handler for enterprise admin
  oauth-enterprise-admin:
    description: Ensures the logged in user is an administrator for the enterprise
    type: oauth2
    flow: accessCode
    authorizationUrl: ''
    tokenUrl: ''

paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /account/login/twitter:
    x-swagger-router-controller: account_controller
    get:
      description: Endpoint for logging into the directory using Twitter
      # call this method name on the controller
      operationId: loginTwitter

      responses:
        "302":
          description: Redirect to login

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /account/login/twitter/callback:
    x-swagger-router-controller: account_controller
    get:
      description: Callback after logging into the directory using Twitter
      # call this method name on the controller
      operationId: loginCallbackTwitter

      responses:
        "302":
          description: Redirect to login

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /account/login/facebook:
    x-swagger-router-controller: account_controller
    get:
      description: Endpoint for logging into the directory using Facebook
      # call this method name on the controller
      operationId: loginFacebook

      responses:
        "302":
          description: Redirect to login

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /account/login/facebook/callback:
    x-swagger-router-controller: account_controller
    get:
      description: Callback after logging into the directory using Facebook
      # call this method name on the controller
      operationId: loginCallbackFacebook

      responses:
        "302":
          description: Redirect to login

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /account/logout:
    x-swagger-router-controller: account_controller
    get:
      description: Endpoint for logging out
      # call this method name on the controller
      operationId: logout

      responses:
        "200":
          description: Successfully logged out

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /account/permissions:
    x-swagger-router-controller: account_controller
    get:
      description: Endpoint for retrieving account permisions
      # call this method name on the controller
      operationId: getAccountPermissions

      responses:
        "200":
          description: Returns the details of the account permissions
          schema:
            $ref: "#/definitions/AccountPermissions"

        "403":
          description: Not logged in.

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /directoryAdmin:
    x-swagger-router-controller: admin_controller
    get:
      description: Endpoint for managing admins
      security:
        - oauth-directory-admin: []
      # call this method name on the controller
      operationId: getAllDirectoryAdmins

      responses:
        "200":
          description: Returns the details of the directory administrators
          schema:
            type: array
            items:
               $ref: "#/definitions/DirectoryAdmin"

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /directory:
    x-swagger-router-controller: enterprise.controller
    get:
      description: Returns all social enterprises in the directory
      # call this method name on the controller
      operationId: getAllEnterprisesPublic
      parameters:
        - name: offset
          in: query
          description: Skip the first number of enterprises specified by offset value
          required: false
          type: number
          format: uint
        - name: count
          in: query
          description: Number of enterprises to return
          required: false
          type: number
          format: uint
          minimum: 1
          maximum: 500
        - name: q
          in: query
          description: Search keyword(s), each one separated by + symbol
          required: false
          type: string
        - name: at
          in: query
          description: Location. Eg. ?at=longitude,latitude
          required: false
          type: string
        - name: lang
          in: query
          description: language to use
          required: false
          type: string

      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
               $ref: "#/definitions/EnterprisePublic"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /enterprise/{id}:
    x-swagger-router-controller: enterprise.controller
    get:
      description: Returns one social enterprise in the directory
      # call this method name on the controller
      operationId: getOneEnterprisePublic
      parameters:
        - name: id
          in: path
          description: ID of enterprise to fetch
          required: true
          type: string
        - name: lang
          in: query
          description: language to use
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/EnterprisePublic"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

#  /enterprise/{id}/complete:
#    x-swagger-router-controller: enterprise.controller
#    get:
#      description: Returns *all* details about one social enterprise in the directory
      # call this method name on the controller
#      operationId: getOneEnterpriseComplete
#      parameters:
#        - name: id
#          in: path
#          description: ID of enterprise to fetch
#          required: true
#          type: string
#      responses:
#        "200":
#          description: Success
#          schema:
#            $ref: "#/definitions/EnterpriseComplete"
#        default:
#          description: Error
#          schema:
#            $ref: "#/definitions/ErrorResponse"

  /enterprise/{id}/logo:
    x-swagger-router-controller: enterprise.controller
    get:
      description: Returns logo of one social enterprise in the directory
      # call this method name on the controller
      operationId: getEnterpriseLogo
      produces:
        - image/jpeg
        - image/png
        - image/gif
        - image/svg+xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of enterprise to fetch logo for
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: file
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /enterprise:
    x-swagger-router-controller: enterprise.controller
    post:
      description: Creates an enterprise in the directory
      security:
        - oauth-directory-admin: []
      # call this method name on the controller
      operationId: createEnterprise
      parameters:
        - name: Enterprise
          in: body
          description: Enterprise to be added to the directory
          required: true
          schema:
            $ref: "#/definitions/NewInternationalEnterprise"

      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/EnterpriseComplete"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:

  EnterprisePublicWithoutID:
    required:
      - name
    properties:
      name:
        type: string
      short_description:
        type: string
      description:
        type: string
      offering:
        type: string
      purposes:
        type: array
        items:
          type: string
      year_started:
        type: integer
        minimum: 1000
        maximum: 3000
      website:
        type: string
      facebook:
        type: string
      instagram:
        type: string
      twitter:
        type: string
      addresses:
        type: array
        items:
           $ref: "#/definitions/Address"
      phones:
        type: array
        items:
           $ref: "#/definitions/PhoneNumber"
      emails:
        type: array
        items:
           $ref: "#/definitions/EmailAddress"
      faxes:
        type: array
        items:
           $ref: "#/definitions/FaxAddress"
      locations:
        $ref: "#/definitions/Locations"

  # public view of an enterprise
  EnterprisePublic:
    allOf:
      - $ref: '#/definitions/EnterprisePublicWithoutID'
      - properties:
          id:
            type: string
    required:
      - id
      - name

  EnterprisePrivateFields:
    properties:
          parent_organization:
            type: string
          contact_person:
            type: array
            items:
              type: string
          annual_revenue_range:
            type: string
          clusters:
            type: array
            items:
              type: string
          segments:
            type: array
            items:
              type: string
          stage_of_development:
            type: string

  # full view of an enterprise (including private fields)
  EnterpriseComplete:
    allOf:
      - $ref: '#/definitions/EnterprisePublic' # inherit all the public fields
      - $ref: '#/definitions/EnterprisePrivateFields'

  NewEnterprise:
      allOf:
        - $ref: '#/definitions/EnterprisePublicWithoutID' # inherit all the public fields
        - $ref: '#/definitions/EnterprisePrivateFields'

  # full view of an enterprise (including private fields)
  NewInternationalEnterprise:
    properties:
      locations:
        $ref: "#/definitions/Locations"
      en:
        $ref: "#/definitions/NewEnterprise"
      fr:
        $ref: "#/definitions/NewEnterprise"


  PhoneNumber:
    required:
      - number
    properties:
      number:
        type: string
      public:
        type: boolean
        default: false
      tags:
        type: array
        items:
          type: string

  EmailAddress:
    required:
      - email
    properties:
      email:
        type: string
      public:
        type: boolean
        default: false
      tags:
        type: array
        items:
          type: string

  FaxAddress:
    required:
      - fax
    properties:
      fax:
        type: string
      public:
        type: boolean
        default: false
      tags:
        type: array
        items:
          type: string

  Address:
    required:
      - address
    properties:
      address:
        type: string
      public:
        type: boolean
        default: false
      tags:
        type: array
        items:
          type: string

  Locations:
    description: Follows GeoJSON MultiPoint data format
    required:
      - type
      - coordinates
    properties:
      type:
        type: string
        enum: ["MultiPoint"]
      coordinates:
        type: array
        items:
          $ref: '#/definitions/Coordinates'

  Coordinates:
    description: longitude, latitude.
    example: [45.425, -75.692]
    type: array
    maxItems: 2
    minItems: 2
    items:
      type: number

  AccountPermissions:
    properties:
      directoryAdmin:
        type: boolean
      authenticatedEnterprises:
        description: List of enterprises {id, name}
        type: array
        items:
          $ref: "#/definitions/SimpleEnterpiseInfo"

  SimpleEnterpiseInfo:
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string

  DirectoryAdmin:
    required:
      - email
    properties:
      email:
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
